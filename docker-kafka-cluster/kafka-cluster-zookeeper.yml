version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"

  kafka1:
    image: bitnami/kafka:latest
    container_name: kafka1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: OUTSIDE:PLAINTEXT,INSIDE:PLAINTEXT
      KAFKA_CFG_LISTENERS: INSIDE://kafka1:9092,OUTSIDE://0.0.0.0:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: INSIDE://kafka1:9092,OUTSIDE://localhost:29092
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INSIDE
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper

  kafka2:
    image: bitnami/kafka:latest
    container_name: kafka2
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: OUTSIDE:PLAINTEXT,INSIDE:PLAINTEXT
      KAFKA_CFG_LISTENERS: INSIDE://kafka2:9092,OUTSIDE://0.0.0.0:29093
      KAFKA_CFG_ADVERTISED_LISTENERS: INSIDE://kafka2:9092,OUTSIDE://localhost:29093
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INSIDE
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "29093:29093"
    depends_on:
      - zookeeper

  kafka3:
    image: bitnami/kafka:latest
    container_name: kafka3
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: OUTSIDE:PLAINTEXT,INSIDE:PLAINTEXT
      KAFKA_CFG_LISTENERS: INSIDE://kafka3:9092,OUTSIDE://0.0.0.0:29094
      KAFKA_CFG_ADVERTISED_LISTENERS: INSIDE://kafka3:9092,OUTSIDE://localhost:29094
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INSIDE
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "29094:29094"
    depends_on:
      - zookeeper

  redpanda-console:
    image: redpandadata/console:v2.7.2
    container_name: redpanda-console
    environment:
      KAFKA_BROKERS: "kafka1:9092,kafka2:9092,kafka3:9092"
      SCHEMA_REGISTRY_ENABLED: "false"
      CONNECT_ENABLED: "false"
      KSQLDB_ENABLED: "false"
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
      - kafka2
      - kafka3

  test-service:
    build: ./test-service
    container_name: test-service
    ports:
      - "5000:5000"
    depends_on:
      - kafka1
    restart: on-failure  # Restart policy for the test service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kafka1:9092"]  # Check Kafka broker availability
      interval: 30s
      timeout: 10s
      retries: 5
